{"ast":null,"code":"import axios from 'axios';\nimport AuthService from './auth.service';\nconst url = 'http://localhost:8000/api/subscriptions/';\nclass SubscriptionsService {\n  async getMembersByMovieId(movieId) {\n    const isAuth = await AuthService.isAuth();\n    if (isAuth) {\n      const res = await axios.get(url + `movie/${movieId}`);\n      return res.data;\n    }\n  }\n  async getMoviesByMemberId(memberId) {\n    const isAuth = await AuthService.isAuth();\n    if (isAuth) {\n      const res = await axios.get(url + 'member/' + memberId);\n      return res.data;\n    }\n  }\n  async create(subscriptionData) {\n    const isAuth = await AuthService.isAuth();\n    if (isAuth) {\n      await axios.post(url, subscriptionData);\n    }\n  }\n  async deleteMemberFromSub(id) {\n    const isAuth = await AuthService.isAuth();\n    if (isAuth) {\n      await axios.delete(url + 'memberId/' + id);\n    }\n  }\n  async deleteMovieFromSub(id) {\n    const isAuth = await AuthService.isAuth();\n    if (isAuth) {\n      await axios.delete(url + 'movieId/' + id);\n    }\n  }\n}\nexport default new SubscriptionsService();","map":{"version":3,"names":["axios","AuthService","url","SubscriptionsService","getMembersByMovieId","movieId","isAuth","res","get","data","getMoviesByMemberId","memberId","create","subscriptionData","post","deleteMemberFromSub","id","delete","deleteMovieFromSub"],"sources":["C:/Users/Lenovo/Desktop/Full Stack/Movie Library (MERN) by Amit Nachum/client/src/services/subscriptions.service.js"],"sourcesContent":["import axios from 'axios';\r\nimport AuthService from './auth.service';\r\n\r\nconst url = 'http://localhost:8000/api/subscriptions/';\r\n\r\nclass SubscriptionsService {\r\n  async getMembersByMovieId(movieId) {\r\n    const isAuth = await AuthService.isAuth();\r\n    if (isAuth) {\r\n      const res = await axios.get(url + `movie/${movieId}`);\r\n      return res.data;\r\n    }\r\n  }\r\n  async getMoviesByMemberId(memberId) {\r\n    const isAuth = await AuthService.isAuth();\r\n    if (isAuth) {\r\n      const res = await axios.get(url + 'member/' + memberId);\r\n      return res.data;\r\n    }\r\n  }\r\n  async create(subscriptionData) {\r\n    const isAuth = await AuthService.isAuth();\r\n    if (isAuth) {\r\n      await axios.post(url, subscriptionData);\r\n    }\r\n  }\r\n  async deleteMemberFromSub(id) {\r\n    const isAuth = await AuthService.isAuth();\r\n    if (isAuth) {\r\n      await axios.delete(url + 'memberId/' + id);\r\n    }\r\n  }\r\n  async deleteMovieFromSub(id) {\r\n    const isAuth = await AuthService.isAuth();\r\n    if (isAuth) {\r\n      await axios.delete(url + 'movieId/' + id);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default new SubscriptionsService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,gBAAgB;AAExC,MAAMC,GAAG,GAAG,0CAA0C;AAEtD,MAAMC,oBAAoB,CAAC;EACzB,MAAMC,mBAAmBA,CAACC,OAAO,EAAE;IACjC,MAAMC,MAAM,GAAG,MAAML,WAAW,CAACK,MAAM,EAAE;IACzC,IAAIA,MAAM,EAAE;MACV,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACN,GAAG,GAAI,SAAQG,OAAQ,EAAC,CAAC;MACrD,OAAOE,GAAG,CAACE,IAAI;IACjB;EACF;EACA,MAAMC,mBAAmBA,CAACC,QAAQ,EAAE;IAClC,MAAML,MAAM,GAAG,MAAML,WAAW,CAACK,MAAM,EAAE;IACzC,IAAIA,MAAM,EAAE;MACV,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACN,GAAG,GAAG,SAAS,GAAGS,QAAQ,CAAC;MACvD,OAAOJ,GAAG,CAACE,IAAI;IACjB;EACF;EACA,MAAMG,MAAMA,CAACC,gBAAgB,EAAE;IAC7B,MAAMP,MAAM,GAAG,MAAML,WAAW,CAACK,MAAM,EAAE;IACzC,IAAIA,MAAM,EAAE;MACV,MAAMN,KAAK,CAACc,IAAI,CAACZ,GAAG,EAAEW,gBAAgB,CAAC;IACzC;EACF;EACA,MAAME,mBAAmBA,CAACC,EAAE,EAAE;IAC5B,MAAMV,MAAM,GAAG,MAAML,WAAW,CAACK,MAAM,EAAE;IACzC,IAAIA,MAAM,EAAE;MACV,MAAMN,KAAK,CAACiB,MAAM,CAACf,GAAG,GAAG,WAAW,GAAGc,EAAE,CAAC;IAC5C;EACF;EACA,MAAME,kBAAkBA,CAACF,EAAE,EAAE;IAC3B,MAAMV,MAAM,GAAG,MAAML,WAAW,CAACK,MAAM,EAAE;IACzC,IAAIA,MAAM,EAAE;MACV,MAAMN,KAAK,CAACiB,MAAM,CAACf,GAAG,GAAG,UAAU,GAAGc,EAAE,CAAC;IAC3C;EACF;AAEF;AAEA,eAAe,IAAIb,oBAAoB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}