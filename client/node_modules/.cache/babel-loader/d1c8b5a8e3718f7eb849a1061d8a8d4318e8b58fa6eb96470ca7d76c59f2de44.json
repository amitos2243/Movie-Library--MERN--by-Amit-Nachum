{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Full Stack\\\\Movie Library (MERN) by Matan Nachum\\\\client\\\\src\\\\components\\\\subscriptions\\\\MoviesWatched.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport SubscriptionsService from '../../services/subscriptions.service';\nimport MoviesService from '../../services/movies.service';\nimport { Card, Typography, Button, makeStyles } from '@material-ui/core';\nimport SubscribeToMovie from './SubscribeToMovie';\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  btn: {\n    background: 'linear-gradient(20deg, #CE8600 30%, #FBA400 65%)',\n    '&:hover': {\n      color: '#FBA400',\n      background: 'black'\n    }\n  }\n});\nconst MoviesWatched = _ref => {\n  _s();\n  let {\n    memberId\n  } = _ref;\n  const classes = useStyles();\n  const [movies, setMovies] = useState([]);\n  const [subscribe, setSubscribe] = useState(false);\n  const formatDate = registrationDate => {\n    const date = new Date(registrationDate);\n    return date.toDateString();\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      // list of movies that watched by member\n      const subscriptions = await SubscriptionsService.getMoviesByMemberId(memberId);\n      if (subscriptions.length > 0) {\n        const moviesForMember = [];\n        subscriptions.map(async s => {\n          const movie = await MoviesService.getMovie(s.movie_id);\n          moviesForMember.push({\n            ...s,\n            name: movie.name\n          });\n          if (moviesForMember.length === subscriptions.length) setMovies(moviesForMember);\n        });\n      }\n    };\n    fetchData();\n  }, []);\n  const handleClick = () => {\n    if (!subscribe) setSubscribe(true);else setSubscribe(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      padding: '15px',\n      minWidth: '350px',\n      minHeight: ' 175px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Movies watched\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      className: classes.btn,\n      onClick: handleClick,\n      children: \"Subscribe to a new movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), subscribe ? /*#__PURE__*/_jsxDEV(SubscribeToMovie, {\n      memberId: memberId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 26\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/movies/edit/${movie.movie_id}`,\n          children: movie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 42\n        }, this), \", \", formatDate(movie.date)]\n      }, movie._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(MoviesWatched, \"bBy+rO/0Xy7nhOkxDwliv9MzLec=\", false, function () {\n  return [useStyles];\n});\n_c = MoviesWatched;\nexport default MoviesWatched;\nvar _c;\n$RefreshReg$(_c, \"MoviesWatched\");","map":{"version":3,"names":["useState","useEffect","SubscriptionsService","MoviesService","Card","Typography","Button","makeStyles","SubscribeToMovie","NavLink","jsxDEV","_jsxDEV","useStyles","btn","background","color","MoviesWatched","_ref","_s","memberId","classes","movies","setMovies","subscribe","setSubscribe","formatDate","registrationDate","date","Date","toDateString","fetchData","subscriptions","getMoviesByMemberId","length","moviesForMember","map","s","movie","getMovie","movie_id","push","name","handleClick","style","padding","minWidth","minHeight","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","to","_id","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/Full Stack/Movie Library (MERN) by Matan Nachum/client/src/components/subscriptions/MoviesWatched.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport SubscriptionsService from '../../services/subscriptions.service';\r\nimport MoviesService from '../../services/movies.service';\r\nimport { Card, Typography, Button, makeStyles } from '@material-ui/core';\r\nimport SubscribeToMovie from './SubscribeToMovie';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n    btn: {\r\n        background: 'linear-gradient(20deg, #CE8600 30%, #FBA400 65%)',\r\n        '&:hover': {\r\n            color: '#FBA400',\r\n            background: 'black'\r\n        },\r\n    }\r\n})\r\n\r\n\r\nconst MoviesWatched = ({ memberId }) => {\r\n    const classes = useStyles()\r\n    const [movies, setMovies] = useState([]);\r\n    const [subscribe, setSubscribe] = useState(false);\r\n\r\n    const formatDate = (registrationDate) => {\r\n        const date = new Date(registrationDate);\r\n        return date.toDateString();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // list of movies that watched by member\r\n            const subscriptions = await SubscriptionsService.getMoviesByMemberId(memberId);\r\n\r\n            if (subscriptions.length > 0) {\r\n                const moviesForMember = [];\r\n                subscriptions.map(async s => {\r\n                    const movie = await MoviesService.getMovie(s.movie_id);\r\n                    moviesForMember.push({ ...s, name: movie.name })\r\n                    if (moviesForMember.length === subscriptions.length)\r\n                        setMovies(moviesForMember);\r\n                })\r\n\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const handleClick = () => {\r\n        if (!subscribe)\r\n            setSubscribe(true);\r\n        else\r\n            setSubscribe(false);\r\n    }\r\n\r\n    return (\r\n        <Card style={{ padding: '15px', minWidth: '350px', minHeight: ' 175px' }}>\r\n            <Typography variant='h6'>Movies watched</Typography>\r\n            <Button variant=\"contained\" className={classes.btn} onClick={handleClick}>Subscribe to a new movie</Button>\r\n            {subscribe ? <SubscribeToMovie memberId={memberId} /> : ''}\r\n            <ul>\r\n                {movies.map(movie =>\r\n                    <li key={movie._id}>{<NavLink to={`/movies/edit/${movie.movie_id}`}>{movie.name}</NavLink>}, {formatDate(movie.date)}</li>)}\r\n            </ul>\r\n        </Card >\r\n    );\r\n}\r\nexport default MoviesWatched;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}