{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Full Stack\\\\Movie Library (MERN) by Matan Nachum\\\\client\\\\src\\\\components\\\\movies\\\\MoviesPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Box, InputBase } from '@material-ui/core';\nimport MoviesService from '../../services/movies.service';\nimport Movie from './Movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoviesPage = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchPhrase, setSearchPhrase] = useState('');\n  const [filteredMovies, setfilteredMovies] = useState([]);\n  useEffect(() => {\n    // get all movies\n    const fetchData = async () => {\n      const movies = await MoviesService.getMovies();\n      setMovies(movies);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    setfilteredMovies(movies.filter(movie => movie.name.toLowerCase().includes(searchPhrase.toLowerCase())));\n  }, [searchPhrase, movies]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      p: 1,\n      children: /*#__PURE__*/_jsxDEV(InputBase, {\n        style: {\n          borderBottom: '1.5px solid #1F7D1F'\n        },\n        placeholder: \"Search Movie\\u2026\",\n        value: searchPhrase,\n        onChange: e => setSearchPhrase(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexWrap: \"wrap\",\n      p: 1,\n      m: 1,\n      children: filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        movie: movie\n      }, movie._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 46\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(MoviesPage, \"RgC35r1+vTZStuV7/w3bHqvGIDA=\");\n_c = MoviesPage;\nexport default MoviesPage;\nvar _c;\n$RefreshReg$(_c, \"MoviesPage\");","map":{"version":3,"names":["useState","useEffect","Box","InputBase","MoviesService","Movie","jsxDEV","_jsxDEV","Fragment","_Fragment","MoviesPage","_s","movies","setMovies","searchPhrase","setSearchPhrase","filteredMovies","setfilteredMovies","fetchData","getMovies","filter","movie","name","toLowerCase","includes","children","p","style","borderBottom","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","flexWrap","m","map","_id","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/Full Stack/Movie Library (MERN) by Matan Nachum/client/src/components/movies/MoviesPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Box, InputBase } from '@material-ui/core';\r\nimport MoviesService from '../../services/movies.service';\r\nimport Movie from './Movie';\r\n\r\n\r\nconst MoviesPage = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [searchPhrase, setSearchPhrase,] = useState('');\r\n    const [filteredMovies, setfilteredMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // get all movies\r\n        const fetchData = async () => {\r\n            const movies = await MoviesService.getMovies();\r\n            setMovies(movies);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setfilteredMovies(\r\n            movies.filter(movie => movie.name.toLowerCase().includes(searchPhrase.toLowerCase())))\r\n    }, [searchPhrase, movies]);\r\n\r\n    return (\r\n        <>\r\n            <Box p={1}>\r\n                <InputBase style={{ borderBottom: '1.5px solid #1F7D1F' }}\r\n                    placeholder=\"Search Movieâ€¦\"\r\n                    value={searchPhrase}\r\n                    onChange={e => setSearchPhrase(e.target.value)} />\r\n            </Box>\r\n\r\n\r\n            <Box display=\"flex\" flexDirection=\"column\" flexWrap=\"wrap\" p={1} m={1} >\r\n                {filteredMovies.map(movie => <Movie key={movie._id} movie={movie} />)}\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MoviesPage;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,GAAG,EAAEC,SAAS,QAAQ,mBAAmB;AAClD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAE,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACrD,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMN,MAAM,GAAG,MAAMR,aAAa,CAACe,SAAS,EAAE;MAC9CN,SAAS,CAACD,MAAM,CAAC;IACrB,CAAC;IACDM,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACZgB,iBAAiB,CACbL,MAAM,CAACQ,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACV,YAAY,CAACS,WAAW,EAAE,CAAC,CAAC,CAAC;EAC9F,CAAC,EAAE,CAACT,YAAY,EAAEF,MAAM,CAAC,CAAC;EAE1B,oBACIL,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACIlB,OAAA,CAACL,GAAG;MAACwB,CAAC,EAAE,CAAE;MAAAD,QAAA,eACNlB,OAAA,CAACJ,SAAS;QAACwB,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAsB,CAAE;QACtDC,WAAW,EAAC,oBAAe;QAC3BC,KAAK,EAAEhB,YAAa;QACpBiB,QAAQ,EAAEC,CAAC,IAAIjB,eAAe,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpD,eAGN9B,OAAA,CAACL,GAAG;MAACoC,OAAO,EAAC,MAAM;MAACC,aAAa,EAAC,QAAQ;MAACC,QAAQ,EAAC,MAAM;MAACd,CAAC,EAAE,CAAE;MAACe,CAAC,EAAE,CAAE;MAAAhB,QAAA,EACjET,cAAc,CAAC0B,GAAG,CAACrB,KAAK,iBAAId,OAAA,CAACF,KAAK;QAAiBgB,KAAK,EAAEA;MAAM,GAAxBA,KAAK,CAACsB,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAkB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnE;EAAA,gBACP;AAEX,CAAC;AAAA1B,EAAA,CAlCKD,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAoChB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}